    //Used to only fetch data
// const fetchData = () => {
//   return fetch("http://localhost:4000/")
//     .then((response) => response.json())
//     .then((data) => console.log(data))
// }

    const [isFirstLoad, setIsFirstLoad] = useState(true)

    //will rerender when there is any changes
    // useEffect(() => {
    //   fetchData();
    // }, []);

    //will rerender page only if isFirstLoad has been changed


    
    
    useEffect(() => {
        if (isFirstLoad) {
            loadDataFromEndPoint("/paste");
            setIsFirstLoad(false);
        }
    }, [isFirstLoad])

    const loadDataFromEndPoint = async (endpoint: `${string}`) => {
        try {
            const res = await fetch((`http://localhost:4000${endpoint}`))
            // const body = await res.json();
            // console.log({ endpoint })
            // console.log(body)
        } catch (err) {
            console.error(err.message)
            //or use setMessage method using states to return message
            //console.log(err);
            //setMessage(`${err.name}: ${err.message}`);
        }
    }